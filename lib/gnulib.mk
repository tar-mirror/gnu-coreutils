## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libcoreutils --source-base=.#bootmp/lib --m4-base=.#bootmp/m4 --doc-base=.#bootmp/doc --aux-dir=.#bootmp/build-aux --avoid=lock --avoid=size_max --avoid=xsize --no-libtool --macro-prefix=gl acl alloca argmatch assert atexit backupfile base64 c-strtod c-strtold calloc canon-host canonicalize chown cloexec closeout config-h configmake cycle-check d-ino d-type diacrit dirfd dirname dup2 error euidaccess exclude exitfail fcntl fcntl-safer fdl file-type fileblocks filemode filenamecat fnmatch-gnu fopen-safer fprintftime free fsusage ftruncate fts getdate getgroups gethrxtime getline getloadavg getndelim2 getopt getpagesize getpass-gnu gettext gettime gettimeofday getugroups getusershell gnupload group-member hard-locale hash hash-pjw host-os human idcache inttostr inttypes isapipe lchmod lchown lib-ignore linebuffer link-follow long-options lstat malloc mbswidth md5 memcasecmp memchr memcmp memcpy memmove mempcpy memrchr memset mkancesdirs mkdir mkdir-p mkstemp mktime modechange mountlist obstack pathmax perl physmem posixtm posixver putenv quote quotearg raise readlink readtokens readtokens0 readutmp realloc regex rename rename-dest-slash rmdir rmdir-errno rpmatch safe-read same save-cwd savedir savewd settime sha1 sig2str ssize_t stat-macros stat-time stdbool stdlib-safer stpcpy strcase strcspn strftime strpbrk strtod strtoimax strtol strtoumax strverscmp timespec tzset unicodeio unistd-safer unlink-busy unlinkdir unlocked-io uptime userspec utime utimecmp utimens vasprintf verify version-etc-fsf wcwidth winsz-ioctl winsz-termios xalloc xgetcwd xgethostname xmemcoll xnanosleep xreadlink xstrtod xstrtoimax xstrtol xstrtold xstrtoumax yesno

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_LIBRARIES = libcoreutils.a

libcoreutils_a_SOURCES =
libcoreutils_a_LIBADD = $(LIBOBJS)
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module acl

EXTRA_DIST += acl.h

## end   gnulib module acl

## begin gnulib module alloca


libcoreutils_a_LIBADD += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	cp -f $(srcdir)/alloca_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libcoreutils_a_SOURCES += allocsa.h allocsa.c
EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module argmatch

EXTRA_DIST += argmatch.h

## end   gnulib module argmatch

## begin gnulib module arpa_inet

BUILT_SOURCES += $(ARPA_INET_H)

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h:
	test -d arpa || mkdir arpa
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

## end   gnulib module arpa_inet

## begin gnulib module backupfile

EXTRA_DIST += backupfile.h

## end   gnulib module backupfile

## begin gnulib module base64

libcoreutils_a_SOURCES += base64.h base64.c

## end   gnulib module base64

## begin gnulib module c-strtod

EXTRA_DIST += c-strtod.h

## end   gnulib module c-strtod

## begin gnulib module c-strtold

EXTRA_DIST += c-strtod.c c-strtod.h

## end   gnulib module c-strtold

## begin gnulib module canon-host

EXTRA_DIST += canon-host.h

## end   gnulib module canon-host

## begin gnulib module canonicalize

EXTRA_DIST += canonicalize.h

## end   gnulib module canonicalize

## begin gnulib module chdir-long

EXTRA_DIST += chdir-long.h

## end   gnulib module chdir-long

## begin gnulib module cloexec

EXTRA_DIST += cloexec.h

## end   gnulib module cloexec

## begin gnulib module close-stream

EXTRA_DIST += close-stream.h

## end   gnulib module close-stream

## begin gnulib module closeout

EXTRA_DIST += closeout.h

## end   gnulib module closeout

## begin gnulib module configmake

# Retrieve values of the variables through 'configure' followed by
# 'make', not directly through 'configure', so that a user who
# sets some of these variables consistently on the 'make' command
# line gets correct results.
#
# One advantage of this approach, compared to the classical
# approach of adding -DLIBDIR=\"$(libdir)\" etc. to AM_CPPFLAGS,
# is that it protects against the use of undefined variables.
# If, say, $(libdir) is not set in the Makefile, LIBDIR is not
# defined by this module, and code using LIBDIR gives a
# compilation error.
#
# Another advantage is that 'make' output is shorter.
#
# Listed in the same order as the GNU makefile conventions.
# The Automake-defined pkg* macros are appended, in the order
# listed in the Automake documentation.
configmake.h: Makefile
	rm -f $@-t $@
	( \
	  echo '#define PREFIX "$(prefix)"'; \
	  echo '#define EXEC_PREFIX "$(exec_prefix)"'; \
	  echo '#define BINDIR "$(bindir)"'; \
	  echo '#define SBINDIR "$(sbindir)"'; \
	  echo '#define LIBEXECDIR "$(libexecdir)"'; \
	  echo '#define DATAROOTDIR "$(datarootdir)"'; \
	  echo '#define DATADIR "$(datadir)"'; \
	  echo '#define SYSCONFDIR "$(sysconfdir)"'; \
	  echo '#define SHAREDSTATEDIR "$(sharedstatedir)"'; \
	  echo '#define LOCALSTATEDIR "$(localstatedir)"'; \
	  echo '#define INCLUDEDIR "$(includedir)"'; \
	  echo '#define OLDINCLUDEDIR "$(oldincludedir)"'; \
	  echo '#define DOCDIR "$(docdir)"'; \
	  echo '#define INFODIR "$(infodir)"'; \
	  echo '#define HTMLDIR "$(htmldir)"'; \
	  echo '#define DVIDIR "$(dvidir)"'; \
	  echo '#define PDFDIR "$(pdfdir)"'; \
	  echo '#define PSDIR "$(psdir)"'; \
	  echo '#define LIBDIR "$(libdir)"'; \
	  echo '#define LISPDIR "$(lispdir)"'; \
	  echo '#define LOCALEDIR "$(localedir)"'; \
	  echo '#define MANDIR "$(mandir)"'; \
	  echo '#define MANEXT "$(manext)"'; \
	  echo '#define PKGLIBDIR "$(pkglibdir)"'; \
	  echo '#define PKGINCLUDEDIR "$(pkgincludedir)"'; \
	  echo '#define PKGDATADIR "$(pkgdatadir)"'; \
	:) | sed '/""/d' >$@-t
	mv $@-t $@
BUILT_SOURCES += configmake.h
CLEANFILES += configmake.h configmake.h-t

## end   gnulib module configmake

## begin gnulib module cycle-check

EXTRA_DIST += cycle-check.h

## end   gnulib module cycle-check

## begin gnulib module dev-ino

EXTRA_DIST += dev-ino.h

## end   gnulib module dev-ino

## begin gnulib module diacrit

libcoreutils_a_SOURCES += diacrit.h diacrit.c

## end   gnulib module diacrit

## begin gnulib module dirfd

EXTRA_DIST += dirfd.h

## end   gnulib module dirfd

## begin gnulib module dirname

EXTRA_DIST += dirname.h

## end   gnulib module dirname

## begin gnulib module euidaccess

libcoreutils_a_SOURCES += euidaccess.h

## end   gnulib module euidaccess

## begin gnulib module exclude

EXTRA_DIST += exclude.h

## end   gnulib module exclude

## begin gnulib module exit

libcoreutils_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail

EXTRA_DIST += exitfail.h

## end   gnulib module exitfail

## begin gnulib module fcntl

BUILT_SOURCES += $(FCNTL_H)
EXTRA_DIST += fcntl_.h

# We need the following in order to create <fcntl.h> when the system
# doesn't have one that works with the given compiler.
fcntl.h: fcntl_.h
	rm -f $@-t $@
	sed -e 's|@''ABSOLUTE_FCNTL_H''@|$(ABSOLUTE_FCNTL_H)|g' \
	    < $(srcdir)/fcntl_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += fcntl.h fcntl.h-t

## end   gnulib module fcntl

## begin gnulib module fcntl-safer

EXTRA_DIST += fcntl-safer.h fcntl--.h

## end   gnulib module fcntl-safer

## begin gnulib module file-type

EXTRA_DIST += file-type.h

## end   gnulib module file-type

## begin gnulib module filemode

EXTRA_DIST += filemode.h

## end   gnulib module filemode

## begin gnulib module filenamecat

EXTRA_DIST += filenamecat.h

## end   gnulib module filenamecat

## begin gnulib module fnmatch

BUILT_SOURCES += $(FNMATCH_H)
EXTRA_DIST += fnmatch_.h fnmatch_loop.c

# We need the following in order to create <fnmatch.h> when the system
# doesn't have one that supports the required API.
fnmatch.h: fnmatch_.h
	cp -f $(srcdir)/fnmatch_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += fnmatch.h fnmatch.h-t

## end   gnulib module fnmatch

## begin gnulib module fopen-safer

EXTRA_DIST += stdio-safer.h stdio--.h

## end   gnulib module fopen-safer

## begin gnulib module fpending

EXTRA_DIST += __fpending.h

## end   gnulib module fpending

## begin gnulib module fprintftime

EXTRA_DIST += fprintftime.h

## end   gnulib module fprintftime

## begin gnulib module fsusage

EXTRA_DIST += fsusage.h

## end   gnulib module fsusage

## begin gnulib module fts

EXTRA_DIST += fts_.h fts-cycle.c

## end   gnulib module fts

## begin gnulib module full-read

libcoreutils_a_SOURCES += full-read.h full-read.c

## end   gnulib module full-read

## begin gnulib module full-write

libcoreutils_a_SOURCES += full-write.h full-write.c

## end   gnulib module full-write

## begin gnulib module getaddrinfo

libcoreutils_a_SOURCES += getaddrinfo.h

## end   gnulib module getaddrinfo

## begin gnulib module getcwd

EXTRA_DIST += getcwd.h

## end   gnulib module getcwd

## begin gnulib module getdate

libcoreutils_a_SOURCES += getdate.y
BUILT_SOURCES += getdate.c
MAINTAINERCLEANFILES += getdate.c
EXTRA_DIST += getdate.c getdate.h

## end   gnulib module getdate

## begin gnulib module getdelim

EXTRA_DIST += getdelim.h

## end   gnulib module getdelim

## begin gnulib module gethrxtime

EXTRA_DIST += gethrxtime.h xtime.h

## end   gnulib module gethrxtime

## begin gnulib module getline

EXTRA_DIST += getline.h

## end   gnulib module getline

## begin gnulib module getndelim2

EXTRA_DIST += getndelim2.h getndelim2.c

## end   gnulib module getndelim2

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create <getopt.h> when the system
# doesn't have one that works with the given compiler.
getopt.h: getopt_.h
	cp -f $(srcdir)/getopt_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module getpagesize

EXTRA_DIST += getpagesize.h

## end   gnulib module getpagesize

## begin gnulib module getpass-gnu

EXTRA_DIST += getpass.h

## end   gnulib module getpass-gnu

## begin gnulib module gettext

# This is for those projects which use "gettextize --intl" to put a source-code
# copy of libintl into their package. In such projects, every Makefile.am needs
# -I$(top_builddir)/intl, so that <libintl.h> can be found in this directory.
# For the Makefile.ams in other directories it is the maintainer's
# responsibility; for the one from gnulib we do it here.
# This option has no effect when the user disables NLS (because then the intl
# directory contains no libintl.h file) or when the project does not use
# "gettextize --intl".
#AM_CPPFLAGS += -I$(top_builddir)/intl

## end   gnulib module gettext

## begin gnulib module gettext-h

libcoreutils_a_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module group-member

EXTRA_DIST += group-member.h

## end   gnulib module group-member

## begin gnulib module hard-locale

EXTRA_DIST += hard-locale.h

## end   gnulib module hard-locale

## begin gnulib module hash

EXTRA_DIST += hash.h

## end   gnulib module hash

## begin gnulib module hash-pjw

libcoreutils_a_SOURCES += hash-pjw.h hash-pjw.c

## end   gnulib module hash-pjw

## begin gnulib module human

EXTRA_DIST += human.h

## end   gnulib module human

## begin gnulib module inet_ntop

libcoreutils_a_SOURCES += inet_ntop.h

## end   gnulib module inet_ntop

## begin gnulib module intprops

EXTRA_DIST += intprops.h

## end   gnulib module intprops

## begin gnulib module inttostr

EXTRA_DIST += inttostr.c inttostr.h

## end   gnulib module inttostr

## begin gnulib module inttypes

BUILT_SOURCES += $(INTTYPES_H)
EXTRA_DIST += inttypes_.h

# We need the following in order to create <inttypes.h> when the system
# doesn't have one that works with the given compiler.
inttypes.h: inttypes_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	    -e 's|@''ABSOLUTE_INTTYPES_H''@|$(ABSOLUTE_INTTYPES_H)|g' \
	    -e 's/@''PRI_MACROS_BROKEN''@/$(PRI_MACROS_BROKEN)/g' \
	    -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	    -e 's/@''PRIPTR_PREFIX''@/$(PRIPTR_PREFIX)/g' \
	    -e 's/@''HAVE_DECL_IMAXABS''@/$(HAVE_DECL_IMAXABS)/g' \
	    -e 's/@''HAVE_DECL_IMAXDIV''@/$(HAVE_DECL_IMAXDIV)/g' \
	    -e 's/@''HAVE_DECL_STRTOIMAX''@/$(HAVE_DECL_STRTOIMAX)/g' \
	    -e 's/@''HAVE_DECL_STRTOUMAX''@/$(HAVE_DECL_STRTOUMAX)/g' \
	    < $(srcdir)/inttypes_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += inttypes.h inttypes.h-t

## end   gnulib module inttypes

## begin gnulib module isapipe

EXTRA_DIST += isapipe.h

## end   gnulib module isapipe

## begin gnulib module lchmod

EXTRA_DIST += lchmod.h

## end   gnulib module lchmod

## begin gnulib module lchown

EXTRA_DIST += lchown.h

## end   gnulib module lchown

## begin gnulib module linebuffer

libcoreutils_a_SOURCES += linebuffer.h linebuffer.c

## end   gnulib module linebuffer

## begin gnulib module localcharset

libcoreutils_a_SOURCES += localcharset.h localcharset.c
EXTRA_DIST += config.charset ref-add.sin ref-del.sin

# We need the following in order to install a simple file in $(libdir)
# which is shared with other installed packages. We use a list of referencing
# packages so that "make uninstall" will remove the file if and only if it
# is not used by another installed package.
# On systems with glibc-2.1 or newer, the file is redundant, therefore we
# avoid installing it.

all-local: charset.alias ref-add.sed ref-del.sed

charset_alias = $(DESTDIR)$(libdir)/charset.alias
charset_tmp = $(DESTDIR)$(libdir)/charset.tmp
install-exec-local: all-local
	test $(GLIBC21) != no || $(mkinstalldirs) $(DESTDIR)$(libdir)
	if test -f $(charset_alias); then \
	  sed -f ref-add.sed $(charset_alias) > $(charset_tmp) ; \
	  $(INSTALL_DATA) $(charset_tmp) $(charset_alias) ; \
	  rm -f $(charset_tmp) ; \
	else \
	  if test $(GLIBC21) = no; then \
	    sed -f ref-add.sed charset.alias > $(charset_tmp) ; \
	    $(INSTALL_DATA) $(charset_tmp) $(charset_alias) ; \
	    rm -f $(charset_tmp) ; \
	  fi ; \
	fi

uninstall-local: all-local
	if test -f $(charset_alias); then \
	  sed -f ref-del.sed $(charset_alias) > $(charset_tmp); \
	  if grep '^# Packages using this file: $$' $(charset_tmp) \
	      > /dev/null; then \
	    rm -f $(charset_alias); \
	  else \
	    $(INSTALL_DATA) $(charset_tmp) $(charset_alias); \
	  fi; \
	  rm -f $(charset_tmp); \
	fi

charset.alias: config.charset
	rm -f t-$@ $@
	$(SHELL) $(srcdir)/config.charset '$(host)' > t-$@
	mv t-$@ $@

SUFFIXES += .sed .sin
.sin.sed:
	rm -f t-$@ $@
	sed -e '/^#/d' -e 's/@''PACKAGE''@/$(PACKAGE)/g' $< > t-$@
	mv t-$@ $@

CLEANFILES += charset.alias ref-add.sed ref-del.sed

## end   gnulib module localcharset

## begin gnulib module long-options

EXTRA_DIST += long-options.h

## end   gnulib module long-options

## begin gnulib module lstat

EXTRA_DIST += lstat.h

## end   gnulib module lstat

## begin gnulib module mbchar

libcoreutils_a_SOURCES += mbchar.h

## end   gnulib module mbchar

## begin gnulib module mbswidth

libcoreutils_a_SOURCES += mbswidth.h mbswidth.c

## end   gnulib module mbswidth

## begin gnulib module mbuiter

libcoreutils_a_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module md5

libcoreutils_a_SOURCES += md5.h

## end   gnulib module md5

## begin gnulib module memcasecmp

EXTRA_DIST += memcasecmp.h

## end   gnulib module memcasecmp

## begin gnulib module memcoll

EXTRA_DIST += memcoll.h

## end   gnulib module memcoll

## begin gnulib module mempcpy

EXTRA_DIST += mempcpy.h

## end   gnulib module mempcpy

## begin gnulib module memrchr

EXTRA_DIST += memrchr.h

## end   gnulib module memrchr

## begin gnulib module mkancesdirs

EXTRA_DIST += mkancesdirs.h

## end   gnulib module mkancesdirs

## begin gnulib module mkdir-p

libcoreutils_a_SOURCES += dirchownmod.h mkdir-p.h

## end   gnulib module mkdir-p

## begin gnulib module mkstemp

EXTRA_DIST += mkstemp.h

## end   gnulib module mkstemp

## begin gnulib module modechange

EXTRA_DIST += modechange.h

## end   gnulib module modechange

## begin gnulib module mountlist

EXTRA_DIST += mountlist.h

## end   gnulib module mountlist

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
netinet/in.h:
	test -d netinet || mkdir netinet
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

## end   gnulib module netinet_in

## begin gnulib module openat

EXTRA_DIST += at-func.c openat.h openat-priv.h

## end   gnulib module openat

## begin gnulib module pathmax

EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module physmem

EXTRA_DIST += physmem.h

## end   gnulib module physmem

## begin gnulib module posixtm

EXTRA_DIST += posixtm.h

## end   gnulib module posixtm

## begin gnulib module posixver

EXTRA_DIST += posixver.h

## end   gnulib module posixver

## begin gnulib module quote

EXTRA_DIST += quote.h

## end   gnulib module quote

## begin gnulib module quotearg

EXTRA_DIST += quotearg.h

## end   gnulib module quotearg

## begin gnulib module readtokens

EXTRA_DIST += readtokens.h

## end   gnulib module readtokens

## begin gnulib module readtokens0

libcoreutils_a_SOURCES += readtokens0.h readtokens0.c

## end   gnulib module readtokens0

## begin gnulib module readutmp

EXTRA_DIST += readutmp.h

## end   gnulib module readutmp

## begin gnulib module regex

EXTRA_DIST += regcomp.c regex.h regex_internal.c regex_internal.h regexec.c

## end   gnulib module regex

## begin gnulib module safe-read

EXTRA_DIST += safe-read.h

## end   gnulib module safe-read

## begin gnulib module safe-write

EXTRA_DIST += safe-write.h

## end   gnulib module safe-write

## begin gnulib module same

EXTRA_DIST += same.h

## end   gnulib module same

## begin gnulib module same-inode

EXTRA_DIST += same-inode.h

## end   gnulib module same-inode

## begin gnulib module save-cwd

EXTRA_DIST += save-cwd.h

## end   gnulib module save-cwd

## begin gnulib module savedir

EXTRA_DIST += savedir.h

## end   gnulib module savedir

## begin gnulib module savewd

libcoreutils_a_SOURCES += savewd.h savewd.c

## end   gnulib module savewd

## begin gnulib module setenv

libcoreutils_a_SOURCES += setenv.h

## end   gnulib module setenv

## begin gnulib module sha1

EXTRA_DIST += sha1.h

## end   gnulib module sha1

## begin gnulib module sig2str

EXTRA_DIST += sig2str.h

## end   gnulib module sig2str

## begin gnulib module snprintf

libcoreutils_a_SOURCES += snprintf.h

## end   gnulib module snprintf

## begin gnulib module stat-macros

EXTRA_DIST += stat-macros.h

## end   gnulib module stat-macros

## begin gnulib module stat-time

EXTRA_DIST += stat-time.h

## end   gnulib module stat-time

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)
EXTRA_DIST += stdint_.h

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	    -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	    -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	    -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	    -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	    -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	    -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	    -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	    -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	    -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	    -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	    -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	    -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	    -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	    -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	    -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	    -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	    < $(srcdir)/stdint_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

## end   gnulib module stdint

## begin gnulib module stdlib-safer

EXTRA_DIST += stdlib-safer.h stdlib--.h

## end   gnulib module stdlib-safer

## begin gnulib module stpcpy

libcoreutils_a_SOURCES += stpcpy.h

## end   gnulib module stpcpy

## begin gnulib module strcase

libcoreutils_a_SOURCES += strcase.h

## end   gnulib module strcase

## begin gnulib module strdup

EXTRA_DIST += strdup.h

## end   gnulib module strdup

## begin gnulib module strftime

EXTRA_DIST += strftime.h

## end   gnulib module strftime

## begin gnulib module strndup

EXTRA_DIST += strndup.h

## end   gnulib module strndup

## begin gnulib module strnlen

EXTRA_DIST += strnlen.h

## end   gnulib module strnlen

## begin gnulib module strnlen1

libcoreutils_a_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strpbrk

libcoreutils_a_SOURCES += strpbrk.h

## end   gnulib module strpbrk

## begin gnulib module strtod

LIBS += $(POW_LIB)

## end   gnulib module strtod

## begin gnulib module strverscmp

EXTRA_DIST += strverscmp.h

## end   gnulib module strverscmp

## begin gnulib module sys_socket

BUILT_SOURCES += $(SYS_SOCKET_H)
EXTRA_DIST += socket_.h

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: socket_.h
	test -d sys || mkdir sys
	cp -f $(srcdir)/socket_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_socket

## begin gnulib module sys_stat

BUILT_SOURCES += $(SYS_STAT_H)
EXTRA_DIST += stat_.h

# We need the following in order to create <sys/stat.h> when the system
# has one that is incomplete.
sys/stat.h: stat_.h
	test -d sys || mkdir sys
	rm -f $@-t $@
	sed -e 's|@''ABSOLUTE_SYS_STAT_H''@|$(ABSOLUTE_SYS_STAT_H)|g' \
	    < $(srcdir)/stat_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/stat.h sys/stat.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_stat

## begin gnulib module time_r

EXTRA_DIST += time_r.h

## end   gnulib module time_r

## begin gnulib module timespec

EXTRA_DIST += timespec.h

## end   gnulib module timespec

## begin gnulib module unicodeio

libcoreutils_a_SOURCES += unicodeio.h unicodeio.c

## end   gnulib module unicodeio

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	echo '/* Empty placeholder for $@.  */' >$@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module unistd-safer

EXTRA_DIST += unistd-safer.h unistd--.h

## end   gnulib module unistd-safer

## begin gnulib module unlinkdir

EXTRA_DIST += unlinkdir.h

## end   gnulib module unlinkdir

## begin gnulib module unlocked-io

EXTRA_DIST += unlocked-io.h

## end   gnulib module unlocked-io

## begin gnulib module userspec

EXTRA_DIST += userspec.h

## end   gnulib module userspec

## begin gnulib module utimecmp

EXTRA_DIST += utimecmp.h

## end   gnulib module utimecmp

## begin gnulib module utimens

EXTRA_DIST += utimens.h

## end   gnulib module utimens

## begin gnulib module vasnprintf

libcoreutils_a_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vasprintf

libcoreutils_a_SOURCES += vasprintf.h

## end   gnulib module vasprintf

## begin gnulib module verify

libcoreutils_a_SOURCES += verify.h

## end   gnulib module verify

## begin gnulib module version-etc

libcoreutils_a_SOURCES += version-etc.h version-etc.c

## end   gnulib module version-etc

## begin gnulib module version-etc-fsf

libcoreutils_a_SOURCES += version-etc-fsf.c

## end   gnulib module version-etc-fsf

## begin gnulib module wcwidth

libcoreutils_a_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xalloc

EXTRA_DIST += xalloc.h

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libcoreutils_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xgetcwd

EXTRA_DIST += xgetcwd.h

## end   gnulib module xgetcwd

## begin gnulib module xgethostname

libcoreutils_a_SOURCES += xgethostname.h xgethostname.c

## end   gnulib module xgethostname

## begin gnulib module xmemcoll

libcoreutils_a_SOURCES += xmemcoll.h xmemcoll.c

## end   gnulib module xmemcoll

## begin gnulib module xnanosleep

EXTRA_DIST += xnanosleep.h

## end   gnulib module xnanosleep

## begin gnulib module xreadlink

EXTRA_DIST += xreadlink.h

## end   gnulib module xreadlink

## begin gnulib module xstrndup

libcoreutils_a_SOURCES += xstrndup.h xstrndup.c

## end   gnulib module xstrndup

## begin gnulib module xstrtod

EXTRA_DIST += xstrtod.h

## end   gnulib module xstrtod

## begin gnulib module xstrtoimax

libcoreutils_a_SOURCES += xstrtoimax.c

## end   gnulib module xstrtoimax

## begin gnulib module xstrtol

EXTRA_DIST += xstrtol.h

## end   gnulib module xstrtol

## begin gnulib module xstrtold

EXTRA_DIST += xstrtod.c xstrtod.h

## end   gnulib module xstrtold

## begin gnulib module xstrtoumax

libcoreutils_a_SOURCES += xstrtoumax.c

## end   gnulib module xstrtoumax

## begin gnulib module yesno

EXTRA_DIST += yesno.h

## end   gnulib module yesno


mostlyclean-local: mostlyclean-generic
	@test -z "$(MOSTLYCLEANDIRS)" || \
	  for dir in $(MOSTLYCLEANDIRS); do \
	    if test -d $$dir; then \
	      echo "rmdir $$dir"; rmdir $$dir; \
	    fi; \
	  done
